// <auto-generated />
using System;
using BlinBerry.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlinBerry.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlinBerry.Data.Models.Entities.CommonMoneyAndProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CreatedById");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<double>("Eggs");

                    b.Property<double>("Kefir");

                    b.Property<Guid?>("ModifiedById");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<double>("Oil");

                    b.Property<double>("Salt");

                    b.Property<double>("Soda");

                    b.Property<double>("Sugar");

                    b.Property<double?>("TotalCash");

                    b.Property<double>("Vanila");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("BlinBerry.Data.Models.Entities.ProductProcurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BlinBerryId");

                    b.Property<string>("BuyersName");

                    b.Property<string>("Comment");

                    b.Property<Guid?>("CreatedById");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<double>("Eggs");

                    b.Property<double>("EggsPrice");

                    b.Property<double>("Kefir");

                    b.Property<double>("KefirPrice");

                    b.Property<Guid?>("ModifiedById");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<double>("Oil");

                    b.Property<double>("OilPrice");

                    b.Property<DateTime>("ProcurementsDay");

                    b.Property<double>("Salt");

                    b.Property<double>("SaltPrice");

                    b.Property<double>("Soda");

                    b.Property<double>("SodaPrice");

                    b.Property<double>("Sugar");

                    b.Property<double>("SugarPrice");

                    b.Property<double>("Vanila");

                    b.Property<double>("VanilaPrice");

                    b.HasKey("Id");

                    b.HasIndex("BlinBerryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("ProductProcurements");
                });

            modelBuilder.Entity("BlinBerry.Data.Models.Entities.SelesReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BlinBerryId");

                    b.Property<double>("CountOfKg");

                    b.Property<Guid?>("CreatedById");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("DayOfWeek");

                    b.Property<double>("DefectiveKg");

                    b.Property<Guid?>("ModifiedById");

                    b.Property<DateTime?>("ModifiedOn");

                    b.HasKey("Id");

                    b.HasIndex("BlinBerryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("SelesReports");
                });

            modelBuilder.Entity("BlinBerry.Data.Models.Entities.Spending", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BlinBerryId");

                    b.Property<string>("Comment");

                    b.Property<Guid?>("CreatedById");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<DateTime>("Date");

                    b.Property<double>("Eggs");

                    b.Property<double>("Kefir");

                    b.Property<Guid?>("ModifiedById");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<double>("Money");

                    b.Property<double>("Oil");

                    b.Property<double>("Salt");

                    b.Property<double>("Soda");

                    b.Property<double>("Sugar");

                    b.Property<double>("Vanila");

                    b.HasKey("Id");

                    b.HasIndex("BlinBerryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Spendings");
                });

            modelBuilder.Entity("BlinBerry.Data.Models.IdentityModels.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BlinBerry.Data.Models.IdentityModels.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ApplicationUserId");

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<Guid?>("ApplicationUserId");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<Guid>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid?>("ApplicationUserId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BlinBerry.Data.Models.Entities.CommonMoneyAndProducts", b =>
                {
                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("BlinBerry.Data.Models.Entities.ProductProcurement", b =>
                {
                    b.HasOne("BlinBerry.Data.Models.Entities.CommonMoneyAndProducts", "BlinBerry")
                        .WithMany("Procurements")
                        .HasForeignKey("BlinBerryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("BlinBerry.Data.Models.Entities.SelesReport", b =>
                {
                    b.HasOne("BlinBerry.Data.Models.Entities.CommonMoneyAndProducts", "BlinBerry")
                        .WithMany("Reports")
                        .HasForeignKey("BlinBerryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("BlinBerry.Data.Models.Entities.Spending", b =>
                {
                    b.HasOne("BlinBerry.Data.Models.Entities.CommonMoneyAndProducts", "BlinBerry")
                        .WithMany("Spending")
                        .HasForeignKey("BlinBerryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("BlinBerry.Data.Models.IdentityModels.Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser")
                        .WithMany("Claims")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser")
                        .WithMany("Logins")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser")
                        .WithMany("Roles")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("BlinBerry.Data.Models.IdentityModels.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
